{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layouts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECEIVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuid4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","join","getTime","date","concat","getHours","getMinutes","slice","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","id","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$name","name","_ref3$users","_ref3$isCommunity","isCommunity","typingUsers","createUser","_ref","_ref$name","_ref$socketId","socketId","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","_Component","apply","inherits","createClass","key","_this$props","lastMessage","active","onClick","toUpperCase","defaultProps","SideBar","receiver","console","log","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","CHATS","newSideBar","activeSideBar","chats","activeChat","setActiveChat","logout","fa","md","USER","USERS","refs","map","chat","SideBarOption_SideBarOption","get","last","differenceBy","otherUser","title","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","ChatContainer","sendOpenPrivateMessage","addUserToChat","chatId","newUser","newChats","assign","toConsumableArray","removeUsersFromChat","removedUsers","newUsers","difference","resetChat","addChat","reset","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","push","includes","initSocket","off","values","_this3","_this$props2","sidebar_SideBar","messages_Messages","messages_MessageInput","socketURL","Layout","io","reconnect","chats_ChatContainer","LoginForm_LoginForm","App","Layouts_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.177bdf77.chunk.js","sourcesContent":["module.exports = {\r\n  COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\r\n  USER_CONNECTED: \"USER_CONNECTED\",\r\n  MESSAGE_RECEIVED: \"MESSAGE_RECEIVED\",\r\n  MESSAGE_SENT: \"MESSAGE_SENT\",\r\n  USER_DISCONNECTED: \"USER_DISCONNECTED\",\r\n  TYPING: \"TYPING\",\r\n  VERIFY_USER: \"VERIFY_USER\",\r\n  LOGOUT: \"LOGOUT\",\r\n  PRIVATE_MESSAGE: \"PRIVATE_MESSAGE\",\r\n  NEW_CHAT_USER: \"NEW_CHAT_USER\"\r\n}\r\n","const uuid4 = require('uuid/v4')\r\n\r\n\r\n// Create Users\r\nconst createUser = ({name='', socketId=null} = {})=>({\r\n  id:uuid4(),\r\n  name,\r\n  socketId\r\n})\r\n\r\n\r\n//create messages\r\nconst createMessage = ({message='', sender=''} = {})=>({\r\n  id:uuid4(),\r\n  time:getTime(new Date(Date.now())),\r\n  message,\r\n  sender\r\n})\r\n\r\n//create Chat\r\nconst createChat = ({messages = [], name = \"Community\", users = [], isCommunity = false} = {})=>(\r\n\t{\r\n\t\tid:uuid4(),\r\n\t\tname: isCommunity ? name : createChatNameFromUsers(users),\r\n\t\tmessages,\r\n\t\tusers,\r\n\t\ttypingUsers:[],\r\n\t\tisCommunity\r\n\t}\r\n)\r\n\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Chat\"\r\n}\r\n\r\n//get time\r\nconst getTime = (date)=>{\r\n\treturn `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n  createMessage,\r\n  createChat,\r\n  createUser,\r\n  createChatNameFromUsers\r\n}\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nimport Layouts from './Layouts';\r\nimport '../index.css'\r\n// import { subscribeToTimer, getStock } from './api';\r\n\r\nexport default class LoginForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      nickname:'',\r\n      error:''\r\n    }\r\n    // this.handleSubmit=this.handleSubmit.bind(this);\r\n}\r\n  setUser = ({user, isUser})=>{\r\n    // console.log(user, isUser);\r\n    if(isUser){\r\n      this.setError('User name Taken')\r\n    } else {\r\n      this.setError('')\r\n      this.props.setUser(user)\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { socket } = this.props\r\n    const { nickname } = this.state\r\n    socket.emit(VERIFY_USER, nickname, this.setUser)\r\n    // console.log(socket);\r\n  }\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      nickname:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  setError = (error) => {\r\n    this.setState({\r\n      error\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const{ nickname, error } = this.state\r\n\r\n    return (\r\n\r\n        <div className='login'>\r\n          <form onSubmit={this.handleSubmit} className='login-form' >\r\n            <label htmlFor='nickname'>\r\n              <h2>Got a Nickname?</h2>\r\n            </label>\r\n            <input\r\n              ref={(input) =>{this.textInput = input}}\r\n              type='text'\r\n              id='nickname'\r\n              value={nickname}\r\n              onChange={this.handleChange}\r\n              placeholder='My Username'\r\n            />\r\n            <div className='error'>{error ? error:null}</div>;\r\n          </form>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class SideBarOption extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    lastMessage: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n  }\r\n\r\n  static defaultProps = {\r\n    lastMessage:'',\r\n    active: false,\r\n    onClick: ()=>{}\r\n  }\r\n\r\n  render() {\r\n    const {name, lastMessage, active, onClick} = this.props\r\n    return (\r\n      <div\r\n        className={`user ${active ? 'active':''}`}\r\n        onClick={onClick}\r\n        >\r\n        <div className='user-photo'>{name[0].toUpperCase()}</div>\r\n        <div className='user-info'>\r\n          <div className='name'>{name}</div>\r\n          {lastMessage && <div className='last-message'>{lastMessage}</div>}\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {SideBarOption} from './SideBarOption';\r\nimport {get, last, differenceBy} from 'lodash';\r\nimport {createChatNameFromUsers} from '../../Factories'\r\nimport { FaChevronDown } from 'react-icons/fa';\r\nimport { MdMenu } from 'react-icons/md'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport { MdEject } from 'react-icons/md'\r\n\r\nclass SideBar extends Component {\r\n  static type = {\r\n    CHATS:'chats',\r\n    USERS:'users'\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      receiver:'',\r\n      activeSideBar: SideBar.type.CHATS\r\n    }\r\n  }\r\n\r\n\r\n  handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    const {receiver}=this.state\r\n    console.log(receiver);\r\n    const {onSendPrivateMessage} = this.props\r\n    onSendPrivateMessage(receiver)\r\n    this.setState({\r\n      receiver:''\r\n    })\r\n  }\r\n\r\n  addChatForUser = (username) =>{\r\n    this.setActiveSideBar(SideBar.type.CHATS)\r\n    this.props.onSendPrivateMessage(username)\r\n  }\r\n\r\n  setActiveSideBar = (newSideBar) =>{\r\n    this.setState({\r\n      activeSideBar: newSideBar\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // const { chats, activeChat, user, setActiveChat, logout} = this.props\r\n    const { chats, activeChat, user, setActiveChat, logout, users } = this.props\r\n    const  {receiver, activeSideBar} = this.state\r\n    console.log(chats);\r\n\r\n\r\n    return (\r\n\r\n      <div id='side-bar'>\r\n        <div className='heading'>\r\n          <div className='app-name'>Our Cool Chat <FaChevronDown /></div>\r\n          <div className='menu'>\r\n            <MdMenu />\r\n          </div>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit} className='search'>\r\n          <i className='search-icon'><FaSearch /></i>\r\n          <input\r\n            placeholder='Search'\r\n            type='text'\r\n            value={receiver}\r\n            onChange={(e)=>{this.setState({receiver:e.target.value})}}\r\n          />\r\n          <div className='plus'></div>\r\n        </form>\r\n        <div className='side-bar-select'>\r\n          <div\r\n            onClick={()=>{this.setActiveSideBar(SideBar.type.CHATS)}}\r\n            className={`side-bar-select__option ${(activeSideBar === SideBar.type.CHATS) ? 'active':''}`}>\r\n              <span>Chats</span>\r\n            </div>\r\n\r\n          <div\r\n            onClick={()=>{this.setActiveSideBar(SideBar.type.USER)}}\r\n            className={`side-bar-select__option ${(activeSideBar === SideBar.type.USERS) ? 'active':''}`}>\r\n              <span>Users</span>\r\n            </div>\r\n\r\n        </div>\r\n        <div\r\n          className='users'\r\n          ref='users'\r\n          onClick={(e)=>{(e.target === this.refs.user) && setActiveChat(null)}}>\r\n\r\n          {\r\n            activeSideBar == SideBar.type.CHATS ?\r\n          chats.map((chat)=>{\r\n\r\n            if(chat.name){\r\n              // const lastMessage = chat.messages[chat.messages.length -1];\r\n              // const chatSideName = chat.users.find((name)=>{\r\n              //   return name !== user.name\r\n              // }) || 'Community'\r\n              // const classNames = (activeChat && activeChat.id === chat.id) ? 'active' : ''\r\n\r\n              return(\r\n                <SideBarOption\r\n                  key={chat.id}\r\n                  name={chat.isCommunity ? chat.name : createChatNameFromUsers(chat.users, user.name)}\r\n                  lastMessage={get(last(chat.messages),'message','')}\r\n                  active={activeChat.id === chat.id}\r\n                  onClick= {()=>{this.props.setActiveChat(chat)}}\r\n                />\r\n            )\r\n            }\r\n            return null\r\n          })\r\n          :\r\n\r\n            differenceBy(users, [user], 'name').map((otherUser)=>{\r\n              return (\r\n                <SideBarOption\r\n                  key={otherUser.id}\r\n                  name={otherUser.name}\r\n                  onClick= {()=>{this.addChatForUser(otherUser.name)}}\r\n                />\r\n              )\r\n            })\r\n          }\r\n\r\n      </div>\r\n      <div className='current-user'>\r\n        <span>{user.name}</span>\r\n        <div onClick={()=>{logout()}} title=\"Logout\" className='logout'>\r\n          <MdEject/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport { FaVideo } from 'react-icons/fa';\r\nimport { FaUserPlus } from 'react-icons/fa';\r\n\r\n// import { MdEllipsisMenu } from 'react-icons/md'\r\n\r\n\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\r\n\r\n    return (\r\n      <div className='chat-header'>\r\n        <div className='user-info'>\r\n          <div className='user-name'>{name}</div>\r\n          <div className='status'>\r\n            <div className='indicator'></div>\r\n            <span>{numberOfUsers ? numberOfUsers : null}</span>\r\n          </div>\r\n        </div>\r\n        <div className='options'>\r\n          <FaVideo />\r\n          <FaUserPlus />\r\n\r\n          {/* <MdEllipsisMenu/> */}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Messages extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.scrollDown = this.scrollDown.bind(this)\r\n  }\r\n\r\n  scrollDown(){\r\n    const {container} = this.refs\r\n    container.scrollTop = container.scrollHeight\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.scrollDown()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    this.scrollDown()\r\n  }\r\n\r\n\r\n  render() {\r\n    const { messages, user, typingUsers } = this.props\r\n    return (\r\n      <div className='thread-container' ref='container'>\r\n        <div className='thread'>\r\n          {\r\n            messages.map((mes)=>{\r\n              return (\r\n                <div key={mes.id} className={`message-container ${mes.sender === user.name && 'right'}`}>\r\n                  <div className='time'>{mes.time}</div>\r\n                  <div className='data'>\r\n                    <div className='message'>{mes.message}</div>\r\n                    <div className='name'>{mes.sender}</div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n          {\r\n            typingUsers.map((name)=>{\r\n              return (\r\n                <div key={name} className='typing-user'>\r\n                  {`${name} is typing. . .`}\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass MessageInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      message:'',\r\n      isTyping:false\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n    this.sendMessage()\r\n    this.setState({\r\n      message:''\r\n    })\r\n  }\r\n\r\n  sendMessage = ()=>{\r\n    this.props.sendMessage(this.state.message)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.stopCheckingTyping()\r\n  }\r\n\r\n  sendTyping = ()=>{\r\n    this.lastUpdateTime = Date.now()\r\n    if(!this.state.isTyping){\r\n      this.setState({\r\n        isTyping: true\r\n      })\r\n      this.props.sendTyping(true)\r\n      this.startCheckingTyping()\r\n    }\r\n  }\r\n\r\n  startCheckingTyping = ()=>{\r\n    // console.log('is typing');\r\n    this.typingInterval=setInterval(()=>{\r\n      if((Date.now()- this.lastUpdateTime) > 300){\r\n        this.setState({\r\n          isTyping: false\r\n        })\r\n        this.stopCheckingTyping()\r\n      }\r\n    },300)\r\n  }\r\n\r\n\r\n  stopCheckingTyping = ()=>{\r\n    // console.log('stopped typing');\r\n    if(this.typingInterval){\r\n      clearInterval(this.typingInterval)\r\n      this.props.sendTyping(false)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {message} = this.state\r\n    return (\r\n      <div className='message-input'>\r\n        <form onSubmit={this.handleSubmit} className='message-form'>\r\n          <input\r\n            id='message'\r\n            ref={'messageinput'}\r\n            type='text'\r\n            className='form-control'\r\n            value={message}\r\n            autoComplete={'off'}\r\n            placeholder='Type your message'\r\n            onKeyUp={ e =>{e.keyCode !== 13 && this.sendTyping()}}\r\n            onChange = {\r\n              ({target})=>{\r\n                this.setState({\r\n                  message:target.value\r\n                })\r\n              }\r\n            }\r\n          />\r\n          <button disabled={message.length < 1}\r\n            type='submit' className='send'>Send</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageInput;\r\n","import React, { Component } from 'react';\r\nimport SideBar from '../sidebar/SideBar';\r\nimport {COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECEIVED, TYPING, PRIVATE_MESSAGE, USER_CONNECTED, NEW_CHAT_USER, USER_DISCONNECTED,  } from '../../Events';\r\nimport ChatHeading from './ChatHeading';\r\nimport Messages from '../messages/Messages';\r\nimport MessageInput from '../messages/MessageInput';\r\nimport {values, difference, differenceBy} from 'lodash'\r\n\r\n\r\n// import SideBar from './SideBar';\r\n\r\n\r\n// import { subscribeToTimer, getStock } from './api';\r\n\r\nclass ChatContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users:[],\r\n      chats: [],\r\n      activeChat: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {socket} = this.props\r\n    // socket.emit(COMMUNITY_CHAT, this.resetChat)\r\n    this.initSocket(socket)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    const {socket} = this.props\r\n    socket.off(PRIVATE_MESSAGE)\r\n    socket.off(USER_CONNECTED)\r\n    socket.off(USER_DISCONNECTED)\r\n    socket.off(NEW_CHAT_USER)\r\n  }\r\n\r\n  initSocket(socket){\r\n    const{user} = this.props\r\n    socket.emit(COMMUNITY_CHAT, this.resetChat)\r\n    socket.on(PRIVATE_MESSAGE, this.addChat)\r\n    socket.on('connect',()=>{\r\n      socket.emit(COMMUNITY_CHAT, this.resetChat)\r\n    })\r\n    socket.on(USER_CONNECTED, (users)=>{\r\n      console.log(values(users));\r\n      this.setState({\r\n        users:values(users)\r\n      });\r\n    })\r\n    socket.on(USER_DISCONNECTED, ( users)=>{\r\n      const removedUsers = differenceBy(this.state.users, values(users), 'id')\r\n      this.removeUsersFromChat(removedUsers)\r\n      this.setState({\r\n        users:values(users)\r\n      })\r\n    })\r\n    socket.on(NEW_CHAT_USER, this.addUserToChat)\r\n    // socket.emit(PRIVATE_MESSAGE, {receiver:'Mike', sender:user.name})\r\n  }\r\n\r\n  sendOpenPrivateMessage = (receiver) => {\r\n    const{ socket, user }= this.props\r\n    const {activeChat} = this.state\r\n    socket.emit(PRIVATE_MESSAGE, {receiver, sender:user.name, activeChat})\r\n  }\r\n\r\n  addUserToChat = ({chatId, newUser})=>{\r\n    const { chats } = this.state\r\n    const newChats = chats.map(chat=>{\r\n      if(chat.id === chatId){\r\n        return Object.assign({}, chat, {users:[...chat.users, newUser]})\r\n      }\r\n      return chat\r\n    })\r\n    this.setState({\r\n      chats:newChats\r\n    })\r\n  }\r\n\r\n  removeUsersFromChat = removedUsers =>{\r\n    const {chats}=this.state\r\n    const newChats = chats.map(chat=>{\r\n      let newUsers = difference(chat.users, removedUsers.map(u => u.name))\r\n      return Object.assign({}, chat, {users:newUsers})\r\n    })\r\n    this.setState({\r\n      chats:newChats\r\n    })\r\n  }\r\n\r\n  resetChat = (chat)=>{\r\n    return this.addChat(chat, true)\r\n  }\r\n\r\n  addChat = (chat, reset=false)=>{\r\n    console.log(chat);\r\n    const {socket} = this.props\r\n    const {chats} = this.state\r\n    const newChats = reset ? [chat]:[...chats, chat]\r\n    this.setState({\r\n      chats:newChats,\r\n      activeChat:reset ? chat : this.state.activeChat\r\n    })\r\n    console.log(this.state.activeChat);\r\n\r\n    const messageEvent = `${MESSAGE_RECEIVED}-${chat.id}`\r\n    const typingEvent = `${TYPING}-${chat.id}`\r\n\r\n    socket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n    socket.on(messageEvent, this.addMessageToChat(chat.id))\r\n  }\r\n\r\n  addMessageToChat = (chatId)=>{\r\n    return message=>{\r\n      const { chats } = this.state\r\n      let newChats = chats.map((chat)=>{\r\n        if(chat.id === chatId)\r\n          chat.messages.push(message)\r\n        return chat\r\n      })\r\n      this.setState({\r\n        chats: newChats\r\n      })\r\n    }\r\n  }\r\n\r\n  updateTypingInChat = (chatId) => {\r\n    return ({isTyping, user})=>{\r\n      if(user !== this.props.user.name){\r\n        const {chats}=this.state\r\n        let newChats = chats.map((chat)=>{\r\n          if(chat.id === chatId){\r\n            if(isTyping && !chat.typingUsers.includes(user)){\r\n              chat.typingUsers.push(user)\r\n            } else if(!isTyping && chat.typingUsers.includes(user)){\r\n              chat.typingUsers = chat.typingUsers.filter(u=>u !== user)\r\n            }\r\n          }\r\n          return chat\r\n        })\r\n        this.setState({\r\n          chats:newChats\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  sendMessage = (chatId, message)=>{\r\n    const {socket} = this.props\r\n    socket.emit(MESSAGE_SENT, {chatId, message})\r\n  }\r\n\r\n  sendTyping = (chatId, isTyping)=>{\r\n    const {socket}= this.props\r\n    socket.emit(TYPING, {chatId, isTyping})\r\n  }\r\n\r\n\r\n  setActiveChat = (activeChat)=>{\r\n    this.setState({\r\n      activeChat\r\n    })\r\n  }\r\n  render() {\r\n    const { user, logout } = this.props\r\n    const { chats, activeChat, users } = this.state\r\n\r\n\r\n    return (\r\n\r\n      <div className='container'>\r\n        <SideBar\r\n          logout={logout}\r\n          chats={chats}\r\n          user={user}\r\n          users={users}\r\n          activeChat={activeChat}\r\n          setActiveChat={this.setActiveChat}\r\n          onSendPrivateMessage={this.sendOpenPrivateMessage}\r\n        />\r\n        <div className='chat-room-container'>\r\n          { activeChat !== null ?\r\n            (\r\n              <div className='chat-room'>\r\n                <ChatHeading name={activeChat.name} />\r\n                <Messages\r\n                  messages={activeChat.messages}\r\n                  user={user}\r\n                  typingUsers={activeChat.typingUsers} />\r\n                <MessageInput\r\n                  sendMessage={\r\n                    (message)=>{ this.sendMessage(activeChat.id, message)}\r\n                  }\r\n                  sendTyping={\r\n                     (isTyping)=>{ this.sendTyping(activeChat.id, isTyping)}\r\n                  }\r\n                />\r\n              </div>\r\n            ) :\r\n            <div className='chat-room choose'>\r\n              <h3>Choose a chat!</h3>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatContainer;\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\nconst socketURL ='/'\r\n// const socketURL ='http://192.168.56.1:3231'\r\n\r\nexport default class Layout extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      socket: null,\r\n      user: null\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.initSocket()\r\n  }\r\n\r\n  //Connect to and initialize the socket\r\n  initSocket = () => {\r\n    const socket = io(socketURL)\r\n\r\n    socket.on('connect', ()=>{\r\n      if(this.state.user){\r\n        this.reconnect(socket)\r\n      }else{\r\n        console.log('connected');\r\n      }\r\n\r\n\r\n\r\n    })\r\n    this.setState({\r\n      socket: socket\r\n    })\r\n  }\r\n\r\n  reconnect = (socket) =>{\r\n    socket.emit(VERIFY_USER, this.state.user.name, ({isUser, user})=>{\r\n      if(isUser){\r\n        this.setState({\r\n          user:null\r\n        })\r\n      }else{\r\n        this.setUser(user)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Set User Property\r\n  setUser = (user)=> {\r\n    const {socket} = this.state\r\n    // console.log(socket);\r\n    socket.emit(USER_CONNECTED, user);\r\n    this.setState({\r\n      user\r\n    })\r\n    console.log(user);\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    const { socket } = this.state\r\n    socket.emit(LOGOUT)\r\n    this.setState({\r\n      user: null\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    // setUser(user)\r\n    const { socket, user } = this.state\r\n    return (\r\n      <div className='container'>\r\n        {\r\n          !user ?\r\n        <LoginForm socket={ socket } setUser={this.setUser} />\r\n        :\r\n        <ChatContainer socket={socket} user={user}  logout={this.logout} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import React, { Component } from 'react';\n//\n// import { subscribeToTimer, getStock } from './api';\n//\n// class App extends Component {\n//   constructor(props) {\n//   super(props);\n//\n//   subscribeToTimer((err, timestamp) => this.setState({\n//     timestamp\n//   }));\n//\n//   getStock((err, message) => this.setState({\n//     message\n//   }));\n//\n//\n//   this.state = {\n//     timestamp: 'no timestamp yet',\n//     message: 'no message yet'\n//   };\n// }\n//\n//\n//\n//   render() {\n//     console.log(this.state.message);\n//     console.log(this.state.timestamp);\n//     return (\n//       <div className=\"App\">\n//         <p className=\"App-intro\">\n//           This is the timer value: {this.state.timestamp}\n//         </p>\n//         <p className=\"App-intro\">\n//           This is the message value: {this.state.message}\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n//\n// export default App;\n\n\nimport React, { Component } from 'react';\n\nimport Layout from './components/Layouts';\nimport './index.css'\n// import { subscribeToTimer, getStock } from './api';\n\nclass App extends Component {\n\n\n\n\n\n  render() {\n\n    return (\n\n        <Layout title=\"Chat App\" />\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}